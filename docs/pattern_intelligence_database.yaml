# pattern_intelligence_database.yaml
# Intelligent pattern lookup based on 38 successfully configured hospitals
# Version: 1.0
# Date: 2025-10-17

# This file can be used to:
# 1. Reference successful pattern configurations
# 2. Train ML models for pattern prediction
# 3. Quick lookup when configuring new hospitals
# 4. Generate statistics and pattern usage reports

pattern_intelligence:
  
  # Pattern 1: h2_name_h3_title
  h2_name_h3_title:
    pattern_name: "Sequential Different Elements (h2→h3)"
    success_rate: "HIGH"
    hospital_count: 3
    usage_percentage: 8
    
    successful_hospitals:
      - fac: "707"
        name: "Trillium Mississauga"
        code_sample: "h2 for names, h3 for titles"
        url: "https://www.trilliumhealthpartners.ca/aboutus/Pages/leadership.aspx"
        
      - fac: "624"
        name: "Joseph Brant"
        code_sample: "h2.entry-title for names, h3 for titles"
        url: "https://www.josephbranthospital.ca/en/about-us/leadership-team.aspx"
        
      - fac: "596"
        name: "Collingwood"
        code_sample: "h2 sequential with h3"
        url: "https://www.cgmh.on.ca/en/about-us/leadership.aspx"
    
    key_indicators:
      - "h2 and h3 elements present"
      - "Sequential ordering (h2 followed by h3)"
      - "Different element types for name and title"
      - "Name in h2, title in h3"
    
    code_patterns:
      - "<h2>Name</h2><h3>Title</h3>"
      - "h2.entry-title + h3"
      - "Sequential h2/h3 pairs"
    
    yaml_template: |
      pattern: "h2_name_h3_title"
      html_structure:
        name_element: "h2"
        title_element: "h3"
        notes: "Sequential h2→h3 pattern"
  
  # Pattern 2: combined_h2
  combined_h2:
    pattern_name: "Combined in Single Element"
    success_rate: "VERY_HIGH"
    hospital_count: 4
    usage_percentage: 11
    
    successful_hospitals:
      - fac: "941"
        name: "Chatham-Kent"
        code_sample: 'h2 text: "Name - Title", separator: " - "'
        separator: " - "
        
      - fac: "952"
        name: "Hamilton St Joseph's"
        code_sample: 'h2 text: "Name, Title", separator: ", "'
        separator: ", "
        
      - fac: "619"
        name: "Brockville"
        code_sample: 'p text: "Name, Title", separator: ","'
        element: "p"
        separator: ","
        
      - fac: "970"
        name: "Woodstock"
        code_sample: 'h2 with " – " separator'
        separator: " – "
    
    key_indicators:
      - "Name and title in same element"
      - "Visible separator: dash (-), comma (,), pipe (|)"
      - "Format: 'Name [separator] Title'"
      - "Usually h2 or p elements"
    
    code_patterns:
      - '"John Smith - Chief Executive Officer"'
      - '"Jane Doe, Chief Financial Officer"'
      - '"Name | Title"'
      - "Text with clear separator"
    
    common_separators:
      - " - "
      - ", "
      - " | "
      - " – "
      - ": "
    
    yaml_template: |
      pattern: "combined_h2"
      html_structure:
        combined_element: "h2"  # or "p"
        separator: " - "  # or ", " or " | "
        notes: "Name and title combined with separator"
  
  # Pattern 3: table_rows
  table_rows:
    pattern_name: "Table Structure"
    success_rate: "HIGH"
    hospital_count: 2
    usage_percentage: 5
    
    successful_hospitals:
      - fac: "661"
        name: "Markham Stouffville"
        code_sample: "table with td columns, name in col 1, title in col 2"
        
      - fac: "781"
        name: "North York General"
        code_sample: "table structure with distinct columns"
    
    key_indicators:
      - "<table> tags present"
      - "Names in one column, titles in another"
      - "Usually td or th cells"
      - "Structured tabular layout"
    
    code_patterns:
      - "<table><tr><td>Name</td><td>Title</td></tr></table>"
      - "td column structure"
      - "Tabular data format"
    
    yaml_template: |
      pattern: "table_rows"
      html_structure:
        structure_type: "table"
        name_location: "td_column_1"
        title_location: "td_column_2"
        notes: "Table with name/title columns"
  
  # Pattern 4: h2_name_p_title
  h2_name_p_title:
    pattern_name: "h2 Name → p Title"
    success_rate: "HIGH"
    hospital_count: 3
    usage_percentage: 8
    
    successful_hospitals:
      - fac: "953"
        name: "Hanover"
        code_sample: "h2 for name, immediately followed by p for title"
        
      - fac: "632"
        name: "Kingston General"
        code_sample: "h2 name, p title sequential"
        
      - fac: "932"
        name: "Elizabeth Bruyère"
        code_sample: "h2/p pairing with accented names"
        notes: "Handles Unicode characters well"
    
    key_indicators:
      - "h2 elements for names"
      - "p elements immediately following for titles"
      - "Sequential h2→p pairs"
      - "No separator, separate elements"
    
    code_patterns:
      - "<h2>Name</h2><p>Title</p>"
      - "h2 followed by p"
      - "Paired h2/p structure"
    
    yaml_template: |
      pattern: "h2_name_p_title"
      html_structure:
        name_element: "h2"
        title_element: "p"
        notes: "h2 followed by p pattern"
  
  # Pattern 5: div_classes (MOST COMMON)
  div_classes:
    pattern_name: "CSS Class-Based"
    success_rate: "VERY_HIGH"
    hospital_count: 8
    usage_percentage: 21
    priority: "HIGHEST"
    
    successful_hospitals:
      - fac: "606"
        name: "Grand River"
        code_sample: "div.name + div.title"
        name_class: "name"
        title_class: "title"
        
      - fac: "695"
        name: "Niagara Health"
        code_sample: "div.staff-name + div.staff-title"
        name_class: "staff-name"
        title_class: "staff-title"
        
      - fac: "905"
        name: "William Osler"
        code_sample: "div with semantic class names"
        
      - fac: "979"
        name: "Renfrew Victoria"
        code_sample: "span.name + span.position"
        name_class: "name"
        title_class: "position"
        element_type: "span"
        
      - fac: "837"
        name: "Lakeridge Oshawa"
        code_sample: "div.field-name + div.field-title"
        name_class: "field-name"
        title_class: "field-title"
        
      - fac: "976"
        name: "Belleville"
        code_sample: "div classes for structure"
        
      - fac: "736"
        name: "Southlake"
        code_sample: "div.tm-name + div.tm-primary-title"
        name_class: "tm-name"
        title_class: "tm-primary-title"
        
      - fac: "745"
        name: "Orillia"
        code_sample: "div.name + div.position"
        name_class: "name"
        title_class: "position"
    
    key_indicators:
      - "CSS classes with semantic names"
      - "Classes like: .name, .title, .staff-name, .position"
      - "Separate divs or spans for name and title"
      - "May have container class"
      - "Look for: field-, staff-, tm-, or semantic class names"
    
    common_class_patterns:
      name_classes:
        - "name"
        - "staff-name"
        - "field-name"
        - "tm-name"
        - "leader-name"
        - "exec-name"
      title_classes:
        - "title"
        - "position"
        - "staff-title"
        - "field-title"
        - "tm-primary-title"
        - "leader-title"
        - "exec-title"
    
    code_patterns:
      - '<div class="name">Name</div><div class="title">Title</div>'
      - '<div class="staff-name">Name</div><div class="staff-title">Title</div>'
      - 'Semantic CSS class names'
      - 'Class names indicating content'
    
    yaml_template: |
      pattern: "div_classes"
      html_structure:
        name_class: "name"  # Replace with actual class name
        title_class: "title"  # Replace with actual class name
        # container_class: "member"  # Optional - only if mis-pairing
        notes: "CSS class-based structure"
    
    configuration_tips:
      - "Start WITHOUT container_class"
      - "Only add container_class if mis-pairing occurs"
      - "Verify actual class names in browser inspector"
      - "Check for both div and span elements"
  
  # Pattern 6: list_items
  list_items:
    pattern_name: "List Items with Separator"
    success_rate: "HIGH"
    hospital_count: 3
    usage_percentage: 8
    
    successful_hospitals:
      - fac: "957"
        name: "Haliburton Highlands"
        code_sample: 'li elements with "Name | Title" format'
        separator: " | "
        
      - fac: "790"
        name: "Queensway Carleton"
        code_sample: "ul/li structure with separators"
        
      - fac: "850"
        name: "Bluewater Sarnia"
        code_sample: "list items with combined text"
    
    key_indicators:
      - "<ul> or <ol> present"
      - "li elements contain combined text"
      - "Separator visible: |, -, comma"
      - "List-based layout"
    
    code_patterns:
      - '<li>Name | Title</li>'
      - '<ul><li>Name - Title</li></ul>'
      - 'List items with separators'
    
    yaml_template: |
      pattern: "list_items"
      html_structure:
        list_type: "ul"  # or "ol"
        format: "combined"
        separator: " | "  # or " - " or ", "
        notes: "List with separators, handles non-breaking spaces"
  
  # Pattern 7: boardcard_gallery
  boardcard_gallery:
    pattern_name: "Gallery/Card Layouts"
    success_rate: "MEDIUM"
    hospital_count: 1
    usage_percentage: 3
    
    successful_hospitals:
      - fac: "935"
        name: "Scarborough Health"
        code_sample: "div.boardcard gallery layout, name,title format"
        container_class: "boardcard"
    
    key_indicators:
      - "Gallery or card-based layout"
      - "Container classes like: .card, .boardcard, .profile"
      - "Visual grid layout"
      - "Combined name,title in cards"
    
    code_patterns:
      - '<div class="boardcard">Name, Title</div>'
      - 'Card-based layouts'
      - 'Gallery grid structures'
    
    yaml_template: |
      pattern: "boardcard_gallery"
      html_structure:
        container_class: "boardcard"
        text_format: "name_comma_title"
        separator: ","
        notes: "Gallery card layout"
  
  # Pattern 8: custom_table_nested
  custom_table_nested:
    pattern_name: "Complex Nested Tables"
    success_rate: "MEDIUM"
    hospital_count: 1
    usage_percentage: 3
    complexity: "HIGH"
    
    successful_hospitals:
      - fac: "777"
        name: "Queensway Carleton (mixed)"
        code_sample: "Multiple table formats, complex nested structure"
    
    key_indicators:
      - "Nested table structures"
      - "Mixed formats in same page"
      - "Complex td/div nesting"
      - "Requires custom parsing"
    
    code_patterns:
      - 'Tables with nested divs/p elements'
      - 'Multiple table structures'
      - 'Complex nested HTML'
    
    yaml_template: |
      pattern: "custom_table_nested"
      html_structure:
        structure_type: "table_with_nested_elements"
        name_selector: "td p[style*='text-align: left']"
        title_selector: "td div[style*='text-align: left']"
        container: "td"
        notes: "Complex nested table structure"
  
  # Pattern 9: field_content_sequential
  field_content_sequential:
    pattern_name: "Sequential Same-Class Elements"
    success_rate: "MEDIUM"
    hospital_count: 1
    usage_percentage: 3
    complexity: "MEDIUM"
    
    successful_hospitals:
      - fac: "939"
        name: "Holland Bloorview"
        code_sample: "All in .field-content, pattern: Name(i), Title(i+1), Empty(i+2)"
        element_selector: ".field-content"
        pattern_type: "sequential_every_3"
        start_index: 3
    
    key_indicators:
      - "All data in same CSS class"
      - "Repeating pattern: Name, Title, [empty/skip], repeat"
      - "Sequential index-based extraction"
      - "No structural difference between name/title"
    
    code_patterns:
      - '<div class="field-content">Name</div><div class="field-content">Title</div><div class="field-content"></div>'
      - 'Repeating same-class elements'
      - 'Pattern recognition needed'
    
    yaml_template: |
      pattern: "field_content_sequential"
      html_structure:
        element_selector: ".field-content"
        pattern_type: "sequential_every_3"
        start_index: 3  # Skip first N elements
        notes: "Sequential pattern: Name, Title, Empty, repeat"
  
  # Pattern 10: nested_list_with_ids
  nested_list_with_ids:
    pattern_name: "ID-Based or Complex Selectors"
    success_rate: "MEDIUM"
    hospital_count: 1
    usage_percentage: 3
    complexity: "MEDIUM"
    
    successful_hospitals:
      - fac: "827"
        name: "Peterborough"
        code_sample: "div[id^='t-'] for names, span[id^='d-'] for titles"
        name_selector: "div[id^='t-']"
        title_selector: "span[id^='d-']"
    
    key_indicators:
      - "IDs with patterns: id='t-1', id='d-1'"
      - "Complex CSS selectors needed"
      - "ID-based pairing"
      - "No semantic class names"
    
    code_patterns:
      - '<div id="t-1">Name</div><span id="d-1">Title</span>'
      - 'ID patterns like t-, d-, etc.'
      - 'Requires CSS attribute selectors'
    
    yaml_template: |
      pattern: "nested_list_with_ids"
      html_structure:
        name_selector: "div[id^='t-']"
        title_selector: "span[id^='d-']"
        container: "li.column"  # Optional
        notes: "ID-based pairing with attribute selectors"
  
  # Pattern 12: p_with_bold_and_br
  p_with_bold_and_br:
    pattern_name: "Bold Names with BR Separator"
    success_rate: "MEDIUM"
    hospital_count: 0
    usage_percentage: 0
    notes: "Available pattern, not yet used in configured hospitals"
    
    key_indicators:
      - "Names in bold/strong tags"
      - "<br> tags separating name from title"
      - "Paragraph-based layout"
    
    code_patterns:
      - '<p><strong>Name</strong><br>Title</p>'
      - '<p><b>Name</b><br>Title</p>'
    
    yaml_template: |
      pattern: "p_with_bold_and_br"
      html_structure:
        container_selector: "p"  # Optional
        notes: "Names in bold/strong, separated by BR tags"
  
  # Pattern 13: manual_entry_required
  manual_entry_required:
    pattern_name: "Manual Entry Required (Last Resort)"
    success_rate: "N/A"
    hospital_count: 4
    usage_percentage: 11
    notes: "Used when automated scraping fails"
    
    hospitals_requiring_manual:
      - fac: "947"
        name: "North Bay"
        reason: "Site blocks scraping - Cloudflare protection"
        
      - fac: "927"
        name: "Peterborough St Joseph"
        reason: "Site blocks scraping - bot detection"
        
      - fac: "763"
        name: "Pembroke"
        reason: "Titles in prose paragraphs, not structured"
        
      - fac: "975"
        name: "Custom nested"
        reason: "Too complex for standard patterns"
    
    key_indicators:
      - "Site blocks automated scraping"
      - "Captcha or bot detection"
      - "Titles in prose/paragraph form"
      - "Extremely irregular structure"
      - "No consistent HTML pattern"
    
    common_blockers:
      - "Cloudflare protection"
      - "reCAPTCHA"
      - "JavaScript-rendered content"
      - "Prose descriptions instead of structured data"
    
    yaml_template: |
      pattern: "manual_entry_required"
      html_structure:
        notes: "Site blocks scraping - Cloudflare protection"
        # OR
        notes: "Titles in prose paragraphs, not extractable"
      missing_people:
        - name: "John Smith"
          title: "Chief Executive Officer"
        - name: "Jane Doe"
          title: "Chief Financial Officer"

# Pattern Selection Decision Tree
pattern_selection_logic:
  
  step_1_blockers:
    question: "Is the site blocked or are titles in prose?"
    if_yes: "manual_entry_required"
    check_for:
      - "Cloudflare challenge"
      - "Captcha"
      - "JavaScript requirement"
      - "Prose descriptions"
  
  step_2_structure_type:
    question: "What is the primary HTML structure?"
    options:
      table: 
        patterns: ["table_rows", "custom_table_nested"]
        check_for: "<table> tags"
      list:
        patterns: ["list_items"]
        check_for: "<ul> or <ol> tags"
      gallery:
        patterns: ["boardcard_gallery"]
        check_for: "Card/grid layout classes"
  
  step_3_css_classes:
    question: "Are there semantic CSS classes?"
    if_yes:
      primary_pattern: "div_classes"
      success_rate: "21% of hospitals use this"
      priority: "HIGHEST"
    check_for:
      - ".name, .title"
      - ".staff-name, .staff-title"
      - ".field-*, .tm-*"
      - "Any semantic class names"
    
    special_cases:
      same_class_all:
        pattern: "field_content_sequential"
        indicator: "All elements use same class"
      id_patterns:
        pattern: "nested_list_with_ids"
        indicator: "ID attributes with patterns"
  
  step_4_element_types:
    question: "What element combinations are present?"
    options:
      h2_and_h3:
        pattern: "h2_name_h3_title"
        success_rate: "HIGH"
      h2_and_p:
        pattern: "h2_name_p_title"
        success_rate: "HIGH"
      combined_with_separator:
        pattern: "combined_h2"
        success_rate: "VERY HIGH"
        check_for: "Separator characters: -, comma, |"
      bold_with_br:
        pattern: "p_with_bold_and_br"
        check_for: "<strong> or <b> with <br>"

# Usage Statistics
statistics:
  total_hospitals: 38
  total_patterns_in_use: 11
  
  pattern_ranking_by_usage:
    - rank: 1
      pattern: "div_classes"
      count: 8
      percentage: 21
      reliability: "VERY HIGH"
      
    - rank: 2
      pattern: "combined_h2"
      count: 4
      percentage: 11
      reliability: "VERY HIGH"
      
    - rank: 3
      pattern: "manual_entry_required"
      count: 4
      percentage: 11
      reliability: "N/A"
      
    - rank: 4
      pattern: "h2_name_h3_title"
      count: 3
      percentage: 8
      reliability: "HIGH"
      
    - rank: 4
      pattern: "h2_name_p_title"
      count: 3
      percentage: 8
      reliability: "HIGH"
      
    - rank: 4
      pattern: "list_items"
      count: 3
      percentage: 8
      reliability: "HIGH"
  
  recommended_first_attempts:
    - "div_classes - Try first if you see semantic CSS classes"
    - "combined_h2 - Try if you see name/title in same element with separator"
    - "h2_name_h3_title - Try if you see h2/h3 pairs"
    - "h2_name_p_title - Try if you see h2/p pairs"
    - "table_rows - Try if structure is tabular"

# Machine Learning Features (for future implementation)
ml_features:
  text_features:
    - "presence_of_separator_characters"
    - "semantic_class_names"
    - "element_type_combinations"
    - "nesting_depth"
    - "attribute_patterns"
  
  structural_features:
    - "table_present"
    - "list_present"
    - "grid_layout"
    - "sequential_same_elements"
  
  indicator_features:
    - "h2_count"
    - "h3_count"
    - "p_count"
    - "div_count"
    - "class_semantic_score"
    - "id_pattern_score"

# Integration Notes
integration:
  r_usage:
    description: "This YAML can be loaded in R for automated pattern suggestion"
    example_code: |
      library(yaml)
      pattern_db <- yaml::read_yaml("pattern_intelligence_database.yaml")
      
      # Get most successful patterns
      top_patterns <- pattern_db$statistics$pattern_ranking_by_usage
      
      # Look up specific pattern
      div_classes_info <- pattern_db$pattern_intelligence$div_classes
      
      # Get code samples for a pattern
      samples <- div_classes_info$successful_hospitals
  
  web_tool_usage:
    description: "Already integrated into published web tool"
    url: "Published artifact URL"
  
  future_enhancements:
    - "ML model training from this data"
    - "Automated pattern prediction API"
    - "Pattern success rate tracking over time"
    - "New pattern discovery from failed configurations"